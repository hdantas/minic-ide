module MiniC-ASTSyntax-testcases

language MiniC
start symbol Exp

test array    [[x[0] ]]     parse to ArrayVar("x", IntConst("0"))
test struct   [[x.y ]]      parse to StructMember(Var("x"), Var("y"))

test op AND   [[x && y]]    parse to And(Var("x"), Var("y"))
test op lt    [[x < y]]     parse to Lt(Var("x"), Var("y"))
test op gt    [[x > y]]     parse to Gt(Var("x"), Var("y"))

// test op lteq  [[x <= y]]    parse to LessThanEqual(Var("x"), Var("y"))
// test op gteq  [[x >= y]]    parse to GreaterThanEqual(Var("x"), Var("y"))
// test op eq    [[x == y]]    parse to Equal(Var("x"), Var("y"))
// test op neq   [[x != y]]    parse to NotEqual(Var("x"), Var("y"))

test op add   [[x + y]]     parse to Add(Var("x"), Var("y"))
test op add   [[4 + 2]]     parse to Add(IntConst("4"), IntConst("2"))
test op add   [[-4 + 2]]    parse to Add(IntConst("-4"), IntConst("2"))
test op sub   [[x - y]]     parse to Subtract(Var("x"), Var("y"))
test op sub   [[4 - 2]]     parse to Subtract(IntConst("4"), IntConst("2"))
test op sub   [[-4 - 2]]    parse to Subtract(IntConst("-4"), IntConst("2"))
test op mul   [[x * y]]     parse to Multiply(Var("x"),Var("y"))
test op mul   [[4 * 2]]     parse to Multiply(IntConst("4"), IntConst("2"))
test op mul   [[-4 * 2]]    parse to Multiply(IntConst("-4"), IntConst("2"))
test op mul   [[4 * -2]]    parse to Multiply(IntConst("4"), IntConst("-2"))
test op div   [[x / y]]     parse to Divide(Var("x"),Var("y"))
test op div   [[4 / 2]]     parse to Divide(IntConst("4"), IntConst("2"))
test op div   [[-4 / 2]]    parse to Divide(IntConst("-4"), IntConst("2"))
test op div   [[4 / -2]]    parse to Divide(IntConst("4"), IntConst("-2"))
test not      [[!x]]        parse to Not(Var("x"))
test sizeof   [[sizeof(x)]] parse to Sizeof(Var("x"))
test fun call [[foo(x)]]    parse to Call("foo", [Var("x")])


module method-resolution

language MiniC
start symbol Program


// We covered name resolution tests already in a previous assignment.
// We skipped method names in that assignment, since method name resolution
// requires type analysis. Consider the following test case as an example:

// The type of the callee expression determines the class in which the method declaration can be found.
// In this example, the expression new Foo() is of type ClassType(Foo) and the corresponding class Foo
// contains a method declaration for run().

// You should come up with test cases for the resolution of method names.
// Start with simple test cases, but keep in mind that method name resolution
// is quite complex and that coverage is the main criterion for your grade.
// It is important to think about forward and backward references,
// resolution in the presence of homonyms and overriding, and the influence
// of class hierarchies on resolution.
 
// You should also come up with test cases for error checking on method names.
// This should include test cases for errors on duplicate definitions,
// missing definitions, and method overloading as well as for notes
// on method overriding. Similar to previous test cases,
// you can pair up positive (0 errors) and negative test cases.

test method name resolution [[
    class Main {
        public static void main (String[] args) {
            System.out.println(new Foo().[[run]]());
        }
    }

class Foo {
    public int [[run]]() {
        return 1;
    }
}
]] resolve #1 to #2




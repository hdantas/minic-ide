module MiniC-ContextFree.pp.generated

strategies
  prettyprint-Program :
    File(a, b, c, d) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a1225]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [b704]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [c192]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [d64]
                          )
                        ]
    where a1225 := <pp-V-list(prettyprint-TypeDec)> a
    where b704 := <pp-V-list(prettyprint-VarDec)> b
    where c192 := <pp-V-list(prettyprint-FunctionDec)> c
    where d64 := <pp-one-Z(prettyprint-Exp)> d

  prettyprint-TypeDec :
    StructDec(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("struct "), a1226]
                         )
                       , a1227
                       , b705
                       , a1228
                       ]
    where a1226 := <pp-one-Z(prettyprint-ID)> a
    where a1227 := <pp-indent(|"2")> [S("{")]
    where b705 := <pp-indent(|"2")> [<pp-V-list(prettyprint-VarDec)> b]
    where a1228 := <pp-indent(|"2")> [S("};")]

  prettyprint-VarDec :
    VarDec(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a1229
                        , S(" ")
                        , b706
                        , S(";")
                        ]
                      )
                    ]
    where a1229 := <pp-one-Z(prettyprint-Type)> a
    where b706 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-VarDec :
    ArrayDec(a, b, c) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ a1230
                             , S(" ")
                             , b707
                             , S("[")
                             , c193
                             , S("];")
                             ]
                           )
                         ]
    where a1230 := <pp-one-Z(prettyprint-ArrayType)> a
    where b707 := <pp-one-Z(prettyprint-ID)> b
    where c193 := <pp-one-Z(prettyprint-INT)> c

  prettyprint-FunctionDec :
    FunctionDef(a, b, c, d, e, f) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [ a1231
                                         , S(" ")
                                         , b708
                                         , S(" (")
                                         , c194
                                         , S(")")
                                         ]
                                       )
                                     , a1232
                                     , d65
                                     , e32
                                     , f32
                                     , a1233
                                     ]
    where a1231 := <pp-one-Z(prettyprint-Type)> a
    where b708 := <pp-one-Z(prettyprint-ID)> b
    where c194 := <pp-H-list(prettyprint-Parameter|", ")> c
    where a1232 := <pp-indent(|"2")> [S("{")]
    where d65 := <pp-indent(|"2")> [<pp-V-list(prettyprint-VarDec)> d]
    where e32 := <pp-indent(|"2")> [<pp-V-list(prettyprint-Statement)> e]
    where f32 := <pp-indent(|"2")> [ S("return ")
                                   , <pp-one-Z(prettyprint-Exp)> f
                                   , S(";")
                                   ]
    where a1233 := <pp-indent(|"2")> [S("}")]

  prettyprint-Parameter :
    Arg(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a1234, S(" "), b709]
                   )
                 ]
    where a1234 := <pp-one-Z(prettyprint-Type)> a
    where b709 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-Parameter :
    ArrayArg(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a1235
                          , S(" ")
                          , b710
                          , S("[]")
                          ]
                        )
                      ]
    where a1235 := <pp-one-Z(prettyprint-ArrayType)> a
    where b710 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-ArrayType :
    Int() -> [ H(
                 [SOpt(HS(), "0")]
               , [S("int")]
               )
             ]

  prettyprint-ArrayType :
    Float() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("float")]
                 )
               ]

  prettyprint-Type :
    Array(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a1236]
                  )
                ]
    where a1236 := <pp-one-Z(prettyprint-ArrayType)> a

  prettyprint-Type :
    Struct(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("struct "), a1237]
                   )
                 ]
    where a1237 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-Statement :
    Assignment(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a1238
                            , S(" = ")
                            , b711
                            , S(";")
                            ]
                          )
                        ]
    where a1238 := <pp-one-Z(prettyprint-ID)> a
    where b711 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Statement :
    ArrayAssignment(a, b, c) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [ a1239
                                    , S("[")
                                    , b712
                                    , S("] = ")
                                    , c195
                                    , S(";")
                                    ]
                                  )
                                ]
    where a1239 := <pp-one-Z(prettyprint-ID)> a
    where b712 := <pp-one-Z(prettyprint-Exp)> b
    where c195 := <pp-one-Z(prettyprint-Exp)> c

  prettyprint-Statement :
    StructMemberAssignment(a, b, c) -> [ H(
                                           [SOpt(HS(), "0")]
                                         , [ a1240
                                           , S(".")
                                           , b713
                                           , S(" = ")
                                           , c196
                                           , S(";")
                                           ]
                                         )
                                       ]
    where a1240 := <pp-one-Z(prettyprint-ID)> a
    where b713 := <pp-one-Z(prettyprint-ID)> b
    where c196 := <pp-one-Z(prettyprint-Exp)> c

  prettyprint-Statement :
    IfElse(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("if ("), a1241, S(")")]
                         )
                       , b714
                       , H(
                           [SOpt(HS(), "0")]
                         , [S("else")]
                         )
                       , c197
                       , H(
                           []
                         , [S("")]
                         )
                       ]
    where a1241 := <pp-one-Z(prettyprint-Exp)> a
    where b714 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> b]
    where c197 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> c]

  prettyprint-Statement :
    While(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("while ("), a1242, S(")")]
                     )
                   , b715
                   , H(
                       []
                     , [S("")]
                     )
                   ]
    where a1242 := <pp-one-Z(prettyprint-Exp)> a
    where b715 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> b]

  prettyprint-Statement :
    PrintfInt(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("printf(\"%i\", "), a1243, S(");")]
                      )
                    ]
    where a1243 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Statement :
    PrinfFloat(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("printf(\"%f\", "), a1244, S(");")]
                       )
                     ]
    where a1244 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Statement :
    CodeBlock(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("{")]
                      )
                    , H(
                        [SOpt(HS(), "0")]
                      , [a1245]
                      )
                    , H(
                        [SOpt(HS(), "0")]
                      , [S("}")]
                      )
                    ]
    where a1245 := <pp-V-list(prettyprint-Statement)> a

  prettyprint-Exp :
    IntConst(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a1246]
                     )
                   ]
    where a1246 := <pp-one-Z(prettyprint-INT)> a

  prettyprint-Exp :
    FloatConst(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a1247]
                       )
                     ]
    where a1247 := <pp-one-Z(prettyprint-FLOAT)> a

  prettyprint-Lvalue :
    Var(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a1248]
                )
              ]
    where a1248 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-Lvalue :
    StructMember(a, b) -> [ H(
                              [SOpt(HS(), "0")]
                            , [a1249, S("."), b716]
                            )
                          ]
    where a1249 := <pp-one-Z(prettyprint-Lvalue)> a
    where b716 := <pp-one-Z(prettyprint-Lvalue)> b

  prettyprint-Lvalue :
    ArrayVar(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a1250
                          , S("[")
                          , b717
                          , S("]")
                          ]
                        )
                      ]
    where a1250 := <pp-one-Z(prettyprint-ID)> a
    where b717 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a1251]
           )
         ]
    where a1251 := <pp-one-Z(prettyprint-Lvalue)> a

  prettyprint-Exp :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a1252, S(" && "), b718]
                   )
                 ]
    where a1252 := <pp-one-Z(prettyprint-Exp)> a
    where b718 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Lt(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a1253, S(" < "), b719]
                  )
                ]
    where a1253 := <pp-one-Z(prettyprint-Exp)> a
    where b719 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Gt(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a1254, S(" > "), b720]
                  )
                ]
    where a1254 := <pp-one-Z(prettyprint-Exp)> a
    where b720 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Add(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a1255, S(" + "), b721]
                   )
                 ]
    where a1255 := <pp-one-Z(prettyprint-Exp)> a
    where b721 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Subtract(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a1256, S(" - "), b722]
                        )
                      ]
    where a1256 := <pp-one-Z(prettyprint-Exp)> a
    where b722 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Multiply(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a1257, S(" * "), b723]
                        )
                      ]
    where a1257 := <pp-one-Z(prettyprint-Exp)> a
    where b723 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Divide(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a1258, S(" / "), b724]
                      )
                    ]
    where a1258 := <pp-one-Z(prettyprint-Exp)> a
    where b724 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("!"), a1259]
                )
              ]
    where a1259 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a1260, S(")")]
                          )
                        ]
    where a1260 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Sizeof(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("sizeof ("), a1261, S(")")]
                   )
                 ]
    where a1261 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Call(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [ a1262
                      , S("(")
                      , b725
                      , S(")")
                      ]
                    )
                  ]
    where a1262 := <pp-one-Z(prettyprint-ID)> a
    where b725 := <pp-H-list(prettyprint-Exp|", ")> b

  prettyprint-example =
    prettyprint-Program

  prettyprint-example =
    prettyprint-TypeDec

  prettyprint-example =
    prettyprint-VarDec

  prettyprint-example =
    prettyprint-FunctionDec

  prettyprint-example =
    prettyprint-Parameter

  prettyprint-example =
    prettyprint-ArrayType

  prettyprint-example =
    prettyprint-Type

  prettyprint-example =
    prettyprint-Statement

  prettyprint-example =
    prettyprint-Lvalue

  prettyprint-example =
    prettyprint-Exp
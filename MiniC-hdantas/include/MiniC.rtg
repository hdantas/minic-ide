
regular tree grammar
  start Program
  productions
    ListStarOfExp0         -> ListPlusOfExp0
    ListStarOfExp0         -> <nil>()
    ListStarOfExp0         -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0         -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0         -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0         -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0         -> <cons>(Exp,ListStarOfExp0)
    ListStarOfStatement0   -> ListPlusOfStatement0
    ListStarOfStatement0   -> <nil>()
    ListStarOfStatement0   -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0   -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0   -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0   -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0   -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfParameter0   -> ListPlusOfParameter0
    ListStarOfParameter0   -> <nil>()
    ListStarOfParameter0   -> <conc>(ListStarOfParameter0,ListStarOfParameter0)
    ListPlusOfParameter0   -> <conc>(ListStarOfParameter0,ListPlusOfParameter0)
    ListPlusOfParameter0   -> <conc>(ListPlusOfParameter0,ListStarOfParameter0)
    ListPlusOfParameter0   -> <conc>(ListPlusOfParameter0,ListPlusOfParameter0)
    ListPlusOfParameter0   -> <cons>(Parameter,ListStarOfParameter0)
    ListStarOfFieldDec0    -> ListPlusOfFieldDec0
    ListStarOfFieldDec0    -> <nil>()
    ListStarOfFieldDec0    -> <conc>(ListStarOfFieldDec0,ListStarOfFieldDec0)
    ListPlusOfFieldDec0    -> <conc>(ListStarOfFieldDec0,ListPlusOfFieldDec0)
    ListPlusOfFieldDec0    -> <conc>(ListPlusOfFieldDec0,ListStarOfFieldDec0)
    ListPlusOfFieldDec0    -> <conc>(ListPlusOfFieldDec0,ListPlusOfFieldDec0)
    ListPlusOfFieldDec0    -> <cons>(FieldDec,ListStarOfFieldDec0)
    ListStarOfFunctionDec0 -> ListPlusOfFunctionDec0
    ListStarOfFunctionDec0 -> <nil>()
    ListStarOfFunctionDec0 -> <conc>(ListStarOfFunctionDec0,ListStarOfFunctionDec0)
    ListPlusOfFunctionDec0 -> <conc>(ListStarOfFunctionDec0,ListPlusOfFunctionDec0)
    ListPlusOfFunctionDec0 -> <conc>(ListPlusOfFunctionDec0,ListStarOfFunctionDec0)
    ListPlusOfFunctionDec0 -> <conc>(ListPlusOfFunctionDec0,ListPlusOfFunctionDec0)
    ListPlusOfFunctionDec0 -> <cons>(FunctionDec,ListStarOfFunctionDec0)
    ListStarOfVarDec0      -> ListPlusOfVarDec0
    ListStarOfVarDec0      -> <nil>()
    ListStarOfVarDec0      -> <conc>(ListStarOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0      -> <conc>(ListStarOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0      -> <conc>(ListPlusOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0      -> <conc>(ListPlusOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0      -> <cons>(VarDec,ListStarOfVarDec0)
    ListStarOfTypeDec0     -> ListPlusOfTypeDec0
    ListStarOfTypeDec0     -> <nil>()
    ListStarOfTypeDec0     -> <conc>(ListStarOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0     -> <conc>(ListStarOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0     -> <conc>(ListPlusOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0     -> <conc>(ListPlusOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0     -> <cons>(TypeDec,ListStarOfTypeDec0)
    ListStarOfCommentPart0 -> <string>
    ListPlusOfCommentPart0 -> <string>
    Exp                    -> COMPLETION-Exp(CONTENTCOMPLETE)
    Lvalue                 -> COMPLETION-Lvalue(CONTENTCOMPLETE)
    Statement              -> COMPLETION-Statement(CONTENTCOMPLETE)
    Type                   -> COMPLETION-Type(CONTENTCOMPLETE)
    ArrayType              -> COMPLETION-ArrayType(CONTENTCOMPLETE)
    Parameter              -> COMPLETION-Parameter(CONTENTCOMPLETE)
    FunctionDec            -> COMPLETION-FunctionDec(CONTENTCOMPLETE)
    VarDec                 -> COMPLETION-VarDec(CONTENTCOMPLETE)
    FieldDec               -> COMPLETION-FieldDec(CONTENTCOMPLETE)
    TypeDec                -> COMPLETION-TypeDec(CONTENTCOMPLETE)
    Program                -> COMPLETION-Program(CONTENTCOMPLETE)
    Exp                    -> Uplus(Exp)
    Exp                    -> Uminus(Exp)
    Exp                    -> Call(ID,ListStarOfExp0)
    Exp                    -> Sizeof(Exp)
    Exp                    -> Not(Exp)
    Exp                    -> Multiply(Exp,Exp)
    Exp                    -> Subtract(Exp,Exp)
    Exp                    -> Add(Exp,Exp)
    Exp                    -> Lt(Exp,Exp)
    Exp                    -> And(Exp,Exp)
    Exp                    -> Lvalue
    Lvalue                 -> ArrayVar(ID,Exp)
    Lvalue                 -> StructMember(Lvalue,Lvalue)
    Lvalue                 -> Var(ID)
    Exp                    -> FloatConst(FLOAT)
    Exp                    -> IntConst(INT)
    Exp                    -> OctalConst(OCTAL)
    Statement              -> CodeBlock(ListStarOfStatement0)
    Statement              -> PrintfFloat(Exp)
    Statement              -> PrintfInt(Exp)
    Statement              -> While(Exp,Statement)
    Statement              -> IfElse(Exp,Statement,Statement)
    Statement              -> Assignment(Lvalue,Exp)
    Statement              -> VarDec
    Type                   -> Struct(ID)
    Type                   -> Float()
    Type                   -> Int()
    ArrayType              -> Float()
    ArrayType              -> Int()
    Parameter              -> ArrayArg(ArrayType,ID)
    Parameter              -> Arg(Type,ID)
    FunctionDec            -> FunctionDef(Type,ID,ListStarOfParameter0,ListStarOfStatement0,Exp)
    VarDec                 -> ArrayDec(ArrayType,ID,INT)
    VarDec                 -> VarDec(Type,ID)
    FieldDec               -> FieldArrayDec(ArrayType,ID,INT)
    FieldDec               -> FieldDec(Type,ID)
    TypeDec                -> StructDec(ID,ListStarOfFieldDec0)
    Program                -> File(ListStarOfTypeDec0,ListStarOfVarDec0,ListStarOfFunctionDec0,Exp)
    EOF                    -> <string>
    ForwardSlash           -> <string>
    Asterisk               -> <string>
    CommentPart            -> <string>
    BlockComment           -> <string>
    Comment                -> <string>
    FLOAT                  -> <string>
    OCTAL                  -> <string>
    INT                    -> <string>
    ID                     -> <string>

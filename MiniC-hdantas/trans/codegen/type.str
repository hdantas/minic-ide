module trans/codegen/type

imports
  libstratego-gpp
  lib/runtime/tmpl/pp
  include/MiniC
  include/MiniC-parenthesize
  runtime/nabl/-
  runtime/task/-
  runtime/types/-
  analysis/desugar
  analysis/names
  lib/jasmin/JasminXT
  trans/codegen/-

rules
  // Type: convert MiniC types to Jasmin's
  type-to-jbc: Int()   -> Int()
  type-to-jbc: Float() -> Float()
  type-to-jbc: Struct(ty) -> instr*
  with // Struct("yaha"), "object"
    instr* := ["TODO innerclass"]
  // ; constructor := [ // innerclass constructor   
	 //    INVOKEVIRTUAL(
	 //      JBCMethodRef(
		//       CRef("HelloWorld/innerclasse")
		//     , MRef(Init())
		//     , JBCMethodDesc(
		//         [Reference(CRef("HelloWorld")), Reference(CRef("HelloWorld"))]
		//       , Void()
		//       )
		//     )
		//   )
		// ]
  
    stmt-to-jbc: VarDec(ty, name) -> instr
  with
    descript := JBCFieldDesc(ty)
  ; instr    := [JBCField([PRIVATE()], name, descript, None(), None())]
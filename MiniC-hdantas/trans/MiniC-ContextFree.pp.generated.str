module MiniC-ContextFree.pp.generated

strategies
  prettyprint-Program :
    File(a, b, c, d) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a312]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [b160]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [c40]
                          )
                        , H(
                            [SOpt(HS(), "0")]
                          , [d16]
                          )
                        ]
    where a312 := <pp-V-list(prettyprint-TypeDec)> a
    where b160 := <pp-V-list(prettyprint-VarDec)> b
    where c40 := <pp-V-list(prettyprint-FunctionDec)> c
    where d16 := <pp-one-Z(prettyprint-Exp)> d

  prettyprint-TypeDec :
    StructDec(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("struct "), a313]
                         )
                       , a314
                       , b161
                       , a315
                       ]
    where a313 := <pp-one-Z(prettyprint-ID)> a
    where a314 := <pp-indent(|"2")> [S("{")]
    where b161 := <pp-indent(|"2")> [<pp-V-list(prettyprint-FieldDec)> b]
    where a315 := <pp-indent(|"2")> [S("};")]

  prettyprint-FieldDec :
    FieldDec(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a316
                          , S(" ")
                          , b162
                          , S(";")
                          ]
                        )
                      ]
    where a316 := <pp-one-Z(prettyprint-Type)> a
    where b162 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-FieldDec :
    FieldArrayDec(a, b, c) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ a317
                                  , S(" ")
                                  , b163
                                  , S("[")
                                  , c41
                                  , S("];")
                                  ]
                                )
                              ]
    where a317 := <pp-one-Z(prettyprint-ArrayType)> a
    where b163 := <pp-one-Z(prettyprint-ID)> b
    where c41 := <pp-one-Z(prettyprint-INT)> c

  prettyprint-VarDec :
    VarDec(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a318
                        , S(" ")
                        , b164
                        , S(";")
                        ]
                      )
                    ]
    where a318 := <pp-one-Z(prettyprint-Type)> a
    where b164 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-VarDec :
    ArrayDec(a, b, c) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ a319
                             , S(" ")
                             , b165
                             , S("[")
                             , c42
                             , S("];")
                             ]
                           )
                         ]
    where a319 := <pp-one-Z(prettyprint-ArrayType)> a
    where b165 := <pp-one-Z(prettyprint-ID)> b
    where c42 := <pp-one-Z(prettyprint-INT)> c

  prettyprint-FunctionDec :
    FunctionDef(a, b, c, d, e) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ a320
                                      , S(" ")
                                      , b166
                                      , S(" (")
                                      , c43
                                      , S(")")
                                      ]
                                    )
                                  , a321
                                  , d17
                                  , e8
                                  , a322
                                  ]
    where a320 := <pp-one-Z(prettyprint-Type)> a
    where b166 := <pp-one-Z(prettyprint-ID)> b
    where c43 := <pp-H-list(prettyprint-Parameter|", ")> c
    where a321 := <pp-indent(|"2")> [S("{")]
    where d17 := <pp-indent(|"2")> [<pp-V-list(prettyprint-Statement)> d]
    where e8 := <pp-indent(|"2")> [ S("return ")
                                  , <pp-one-Z(prettyprint-Exp)> e
                                  , S(";")
                                  ]
    where a322 := <pp-indent(|"2")> [S("}")]

  prettyprint-Parameter :
    Arg(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a323, S(" "), b167]
                   )
                 ]
    where a323 := <pp-one-Z(prettyprint-Type)> a
    where b167 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-Parameter :
    ArrayArg(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a324
                          , S(" ")
                          , b168
                          , S("[]")
                          ]
                        )
                      ]
    where a324 := <pp-one-Z(prettyprint-ArrayType)> a
    where b168 := <pp-one-Z(prettyprint-ID)> b

  prettyprint-ArrayType :
    ArrayInt() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("int")]
                    )
                  ]

  prettyprint-ArrayType :
    ArrayFloat() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("float")]
                      )
                    ]

  prettyprint-Type :
    Int() -> [ H(
                 [SOpt(HS(), "0")]
               , [S("int")]
               )
             ]

  prettyprint-Type :
    Float() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("float")]
                 )
               ]

  prettyprint-Type :
    Struct(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("struct "), a325]
                   )
                 ]
    where a325 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-Statement :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a326]
           )
         ]
    where a326 := <pp-one-Z(prettyprint-VarDec)> a

  prettyprint-Statement :
    Assignment(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a327
                            , S(" = ")
                            , b169
                            , S(";")
                            ]
                          )
                        ]
    where a327 := <pp-one-Z(prettyprint-Lvalue)> a
    where b169 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Statement :
    IfElse(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("if ("), a328, S(")")]
                         )
                       , b170
                       , H(
                           [SOpt(HS(), "0")]
                         , [S("else")]
                         )
                       , c44
                       , H(
                           []
                         , [S("")]
                         )
                       ]
    where a328 := <pp-one-Z(prettyprint-Exp)> a
    where b170 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> b]
    where c44 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> c]

  prettyprint-Statement :
    While(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("while ("), a329, S(")")]
                     )
                   , b171
                   , H(
                       []
                     , [S("")]
                     )
                   ]
    where a329 := <pp-one-Z(prettyprint-Exp)> a
    where b171 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Statement)> b]

  prettyprint-Statement :
    PrintfInt(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("printf(\"%i\", "), a330, S(");")]
                      )
                    ]
    where a330 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Statement :
    PrintfFloat(a) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("printf(\"%f\", "), a331, S(");")]
                        )
                      ]
    where a331 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Statement :
    CodeBlock(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("{")]
                      )
                    , H(
                        [SOpt(HS(), "0")]
                      , [a332]
                      )
                    , H(
                        [SOpt(HS(), "0")]
                      , [S("}")]
                      )
                    ]
    where a332 := <pp-V-list(prettyprint-Statement)> a

  prettyprint-Exp :
    OctalConst(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a333]
                       )
                     ]
    where a333 := <pp-one-Z(prettyprint-OCTAL)> a

  prettyprint-Exp :
    IntConst(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a334]
                     )
                   ]
    where a334 := <pp-one-Z(prettyprint-INT)> a

  prettyprint-Exp :
    FloatConst(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a335]
                       )
                     ]
    where a335 := <pp-one-Z(prettyprint-FLOAT)> a

  prettyprint-Lvalue :
    Var(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a336]
                )
              ]
    where a336 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-Lvalue :
    StructMember(a, b) -> [ H(
                              [SOpt(HS(), "0")]
                            , [a337, S("."), b172]
                            )
                          ]
    where a337 := <pp-one-Z(prettyprint-Lvalue)> a
    where b172 := <pp-one-Z(prettyprint-Lvalue)> b

  prettyprint-Lvalue :
    ArrayVar(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ a338
                          , S("[")
                          , b173
                          , S("]")
                          ]
                        )
                      ]
    where a338 := <pp-one-Z(prettyprint-Lvalue)> a
    where b173 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a339]
           )
         ]
    where a339 := <pp-one-Z(prettyprint-Lvalue)> a

  prettyprint-Exp :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a340, S(" && "), b174]
                   )
                 ]
    where a340 := <pp-one-Z(prettyprint-Exp)> a
    where b174 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Lt(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a341, S(" < "), b175]
                  )
                ]
    where a341 := <pp-one-Z(prettyprint-Exp)> a
    where b175 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Add(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a342, S(" + "), b176]
                   )
                 ]
    where a342 := <pp-one-Z(prettyprint-Exp)> a
    where b176 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Subtract(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a343, S(" - "), b177]
                        )
                      ]
    where a343 := <pp-one-Z(prettyprint-Exp)> a
    where b177 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Multiply(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a344, S(" * "), b178]
                        )
                      ]
    where a344 := <pp-one-Z(prettyprint-Exp)> a
    where b178 := <pp-one-Z(prettyprint-Exp)> b

  prettyprint-Exp :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("!"), a345]
                )
              ]
    where a345 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a346, S(")")]
                          )
                        ]
    where a346 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Sizeof(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("sizeof ("), a347, S(")")]
                   )
                 ]
    where a347 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Call(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [ a348
                      , S("(")
                      , b179
                      , S(")")
                      ]
                    )
                  ]
    where a348 := <pp-one-Z(prettyprint-ID)> a
    where b179 := <pp-H-list(prettyprint-Exp|", ")> b

  prettyprint-Exp :
    Uminus(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("-"), a349]
                   )
                 ]
    where a349 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-Exp :
    Uplus(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("+"), a350]
                  )
                ]
    where a350 := <pp-one-Z(prettyprint-Exp)> a

  prettyprint-example =
    prettyprint-Program

  prettyprint-example =
    prettyprint-TypeDec

  prettyprint-example =
    prettyprint-FieldDec

  prettyprint-example =
    prettyprint-VarDec

  prettyprint-example =
    prettyprint-FunctionDec

  prettyprint-example =
    prettyprint-Parameter

  prettyprint-example =
    prettyprint-ArrayType

  prettyprint-example =
    prettyprint-Type

  prettyprint-example =
    prettyprint-Statement

  prettyprint-example =
    prettyprint-Lvalue

  prettyprint-example =
    prettyprint-Exp
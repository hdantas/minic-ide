DAY 5

Develop a test suite for name analysis. The test suite should provide

1. Test cases for the resolution of
  class names,
  field names,
  parameter names, and
  variable names.

2. Test cases for
  errors on duplicate definitions,
  errors on missing definitions,
  warnings on unused definitions,
  errors on cyclic inheritance,
  errors on hiding fields,
  warnings on hiding variables,
  errors on instantiating or subclassing the main class.


**** CHECK THE FOLLOWING ****
resolution:
  new object/new struct instance
  arrays
  methods

errors:
  duplicates
    fields in same class
    parameters

  missing definitions
    new object
    method call due to wrong name (method does not exist in any class)

  unused definitions
    parameters
    methods

  cyclic inheritance: 1/3 points
    cycle of more classes
    cycle with incoming edge ( A -> B -> A, C -> B )

  hiding errors: 1/2 points
      -1: field hiding field in ancestor class
  
  hiding warnings: 0.5/3 points
      -1.5: parameter hiding field
      -1  : variable hiding field in parent/ancestor class

    tests for type projection: 6/20 points
        constants: 0/3 points
        fields and variables: 0/6 points
        unary expressions: 0/3 points
        binary expressions: 6/6 points
        others: 0/2 points
        type errors: 10/24 points
    
    statements: 3/8.5 points
        -0.5: print
        -1  : assignment int = int[]/class type
        -1  : assignment boolean = int[]/class type
        -2.5: assignment class type 
        -0.5: variable in array assignment

    unary expressions: 0/1.5 points
    
    binary expressions: 4/9 points
        -1  : addition right/both
        -1  : subtraction left/both
        -1  : multiplication right/both
        -0.5: comparison left
        -1.5: array subscript
    
    method declarations & calls: 3/5 points
        -1: callee not a class
        -1: argument of super type


May need some changes after hearing back from Guido
Check last test case resolution/parameter-names.spt
Check everything and submit.
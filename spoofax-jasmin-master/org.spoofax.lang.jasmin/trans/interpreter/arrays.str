module arrays

imports
	
	include/JasminXT
	interpreter/state
	
rules
		
	step(|state): IALOAD() -> <pop(|2) ; push(|Int(v)) ; next> state
		where
			<top(|2)> state => [Int(i), Ref(r)] ;
			<resolve(|r)> state => Array(Int(), vs) ;
			<index> (<string-to-int> i, vs) => Int(v)
	
	step(|state): IASTORE() -> <pop(|3) ; update(|r, vs') ; next> state
		where
			<top(|2)> state => [Int(v), Int(i), Ref(r)] ;
			<resolve(|r)> state => Array(Int(), vs) ;
			<at-index(!Int(v))> (<string-to-int ; inc> i, vs) => vs'  
			
	step(|state): ARRAYLENGTH() -> <pop ; push(|Int(l)) ; next> state
		where
			<top> state => Ref(ar) ;
			<resolve(|ar)> state => Array(_, vs) ;
			<length ; int-to-string> vs => l

	step(|state): NEWARRAY(IntName()) -> <alloc(|Array(Int(), [])) ; next> state
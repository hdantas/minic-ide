module JasminXT-Header

imports
	
	lexical/JasminXT-Names
	lexical/JasminXT-Numbers
	lexical/JasminXT-Strings
	lexical/JasminXT-Descriptors
	lexical/JasminXT-Signatures
		
exports

	context-free syntax %% header
			
		BytecodeSpec 
		SourceSpec 
		ClassSpec
		SuperSpec 
		ImplementsSpec*
		SignatureSpec
		EnclosingSpec
		DeprecatedSpec
		%%Annotations
		%%GenericAttributes
		%%DebugExtension		
							-> JasminHeader {"JBCHeader"}
			
	context-free syntax
			
		".bytecode" MajorVersion MinorVersion 	-> BytecodeSpec {"JBCVersion"}
												-> BytecodeSpec {"None"}
		
		Int 	-> MajorVersion {"Major"}
 		"." Int	-> MinorVersion {"Minor"}
				-> MinorVersion {"None"}
		
		".source" String	-> SourceSpec {"JBCSource"}
	%%	".source" Word		-> SourceSpec {"Source"}
							-> SourceSpec {"None"}
								
	context-free syntax
		
		".class"     ClassAccess* ClassName -> ClassSpec {"JBCClass"}
		".interface" ClassAccess* ClassName -> ClassSpec {"JBCInterface"}
		
		"public" 		-> ClassAccess {"PUBLIC"}
 		"final" 		-> ClassAccess {"FINAL"}
 		"interface"		-> ClassAccess {"INTERFACE"}
 		"abstract" 		-> ClassAccess {"ABSTRACT"}
 		"super" 		-> ClassAccess {"SUPER"}			%% TODO: check this
  	
 		".super" ClassName -> SuperSpec {"JBCSuper"}

		".implements" ClassName -> ImplementsSpec {"JBCImplements"}
		
 	context-free syntax
 								
		".signature" ClassSignature 	-> SignatureSpec {"JBCSignature"}
										-> SignatureSpec {"None"}
	
		".enclosing" "method" MethodDescriptor 	-> EnclosingSpec {"JBCEnclosing"}
												-> EnclosingSpec {"None"}		
	
		".deprecated"	-> DeprecatedSpec {"JBCDeprecated"}
						-> DeprecatedSpec {"None"}
	
%%		DebugSpec* -> DebugExtension {"Debug"}
		
%%		".debug" Str -> DebugSpec {"Debug"}

	lexical restrictions
		
		".bytecode"
		".source"
		".class"     
		".interface" 
		"public" 
 		"final" 
 		"interface"
 		"abstract" 
 		"super" 	
 		".super" 		
		".implements" 		
		".signature" 
		".enclosing" 
		%%"method"
		".deprecated" -/- ~[\ \t]
		
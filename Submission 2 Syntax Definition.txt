AST: 9/20 points
-2.5: project does not build completely
-0.5: redundant constructor: Exp -> Start {cons("Expression")}
-0.5: non-descriptive constructor, use Call instead: Exp "." ID "(" ExpList ")" -> Exp {cons("ExpList")}
-0.5: non-descriptive constructor: ID -> Exp {cons("Identifier")}
-0.5: non-descriptive constructor, use NewObject instead: "new" ID "(" ")" ->  Exp {cons("NewIdentifier")}
-2.5: inadequate structure, nested formal parameters: Exp ExpRest* -> ExpList {cons("ExpressionList")}
-0.5: missing constructor for VarRef: ID "=" Exp ";" -> Statement {cons("Assignment")}, ID "[" Exp "]" "=" Exp ";"  -> Statement {cons("ElementAssignment")}
-0.5: non-descriptive constructor, use ClassType instead: ID -> Type {cons("IdentifierType")}
-2.5: inadequate structure, nested formal parameters: Type ID FormalRest* -> FormalList {cons("FormalList")}
-0.5: fields and variables are indistinguishable: ClassDecl.ClassDeclaration
[General]
Total points = 25.0
Tests passed = 180 out of 333
Percentage = 54.054051637649536%
[Identifiers]
Tests passed = 13 out of 13
Points earned = 1.0 out of 1.0
[Keywords]
Tests passed = 3 out of 55
Points earned = 0.0 out of 5.0
Module: "Syntax_Lexical_Identifiers_keywords" Test "abstract not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "assert not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "boolean not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "break not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "byte not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "case not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "catch not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "char not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "class not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "const not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "continue not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "default not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "do not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "double not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "else not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "enum not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "extends not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "final not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "finally not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "float not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "for not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "goto not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "if not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "implements not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "import not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "instanceof not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "int not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "long not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "native not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "new not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "package not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "private not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "protected not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "public not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "return not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "short not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "static not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "strictfp not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "super not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "switch not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "synchronized not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "this not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "throw not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "throws not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "transient not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "try not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "void not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "volatile not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "while not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "null not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "true not allowed as ID " = NOT passed
Module: "Syntax_Lexical_Identifiers_keywords" Test "false not allowed as ID " = NOT passed
[Integers]
Tests passed = 6 out of 9
Points earned = 0.0 out of 1.0
Reason = No positive test passed
[Layout]
Tests passed = 4 out of 9
Points earned = 0.0 out of 1.0
Module: "Syntax_Layout_exp" Test "tabs between new and int array allowed " = NOT passed
Module: "Syntax_Layout_exp" Test "tabs before exp allowed " = NOT passed
Module: "Syntax_Layout_program" Test "spaces, tabs and newline between MainMethod tokens allowed " = NOT passed
Module: "Syntax_Layout_statement" Test "spaces, tabs and newlines between print tokens allowed " = NOT passed
Module: "Syntax_Layout_statement" Test "spaces, tabs and newline in array instantiation allowed " = NOT passed
[Mandatory Layout]
Tests passed = 13 out of 13
Points earned = 2.0 out of 2.0
[Simple comments]
Tests passed = 8 out of 19
Points earned = 2.0 out of 5.0
Module: "Syntax_Lexical_Comment_Simple_Block_Other" Test "block comments at the beginning of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Block_Other" Test "block comments at the end of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Block_Other" Test "block comments at the beginning of a Program allowed 2 " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Block_Other" Test "block comments inside of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Block_Other" Test "block comments containing all types of characters inside of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "line comments at the begining of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "line comments at the end of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "line comments at the end of a Program allowed 2 " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "line comments inside of a Program allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "line comments containing all characters except new line allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Simple_Line_Other" Test "multiple line comments allowed " = NOT passed
[Complex comments & Nested block comments]
Tests passed = 6 out of 8
Points earned = 3.5 out of 5.0
Module: "Syntax_Lexical_Comment_Complex_Block_Other" Test "nested block comments allowed " = NOT passed
Module: "Syntax_Lexical_Comment_Complex_Block_Other" Test "multiple block comments around statements allowed " = NOT passed
[Program]
Tests passed = 2 out of 7
Points earned = 0.0 out of 1.0
Reason = No positive test passed
[Main Class]
Tests passed = 8 out of 13
Points earned = 1.0 out of 2.0
Module: "Syntax_ContextFree_MainClass_positive" Test "Block Statement having multiple Statements in MainMethod allowed " = NOT passed
Module: "Syntax_ContextFree_MainClass_positive" Test "different name of argument of MainMethd allowed " = NOT passed
Module: "Syntax_ContextFree_MainClass_positive" Test "MainMethod with a lot of Layout allowed " = NOT passed
Module: "Syntax_ContextFree_MainClass_positive" Test "Different MainClass's name allowed " = NOT passed
Module: "Syntax_ContextFree_MainClass_positive" Test "simple MainClass allowed " = NOT passed
[Classes]
Tests passed = 10 out of 14
Points earned = 1.0 out of 2.0
Module: "Syntax_ContextFree_ClassDecl_positive" Test "ClassDecl only containing MethodDecl allowed " = NOT passed
Module: "Syntax_ContextFree_ClassDecl_positive" Test "ClassDecl with extends only containing MethodDecl allowed " = NOT passed
Module: "Syntax_ContextFree_ClassDecl_positive" Test "ClassDecl containing VarDecl and MethodDecl allowed " = NOT passed
Module: "Syntax_ContextFree_ClassDecl_positive" Test "ClassDecl with extends containing VarDecl MethodDecl allowed " = NOT passed
[Fields]
Tests passed = 5 out of 9
Points earned = 0.0 out of 2.0
Reason = No positive test passed
[Types]
Tests passed = 9 out of 10
Points earned = 1.5 out of 2.0
Module: "Syntax_ContextFree_Type_negative" Test "void as a Type not allowed " = NOT passed
[Methods]
Tests passed = 12 out of 21
Points earned = 0.0 out of 3.0
Reason = No positive test passed
[Parameters]
Tests passed = 5 out of 9
Points earned = 0.0 out of 1.0
Reason = No positive test passed
[Variables]
Tests passed = 9 out of 9
Points earned = 1.0 out of 1.0
[Statement]
Tests passed = 28 out of 34
Points earned = 4.5 out of 6.0
Module: "Syntax_ContextFree_Statement_negative" Test "Assignment with a primitive type name as rhs not allowed " = NOT passed
Module: "Syntax_ContextFree_Statement_positive" Test "Assign Statement allowed " = NOT passed
Module: "Syntax_ContextFree_Statement_positive" Test "Multiple Block Statements allowed " = NOT passed
Module: "Syntax_ContextFree_Statement_positive" Test "Print Statement allowed " = NOT passed
Module: "Syntax_ContextFree_Statement_positive" Test "Print Statement with a lot of Layout allowed " = NOT passed
Module: "Syntax_ContextFree_Statement_positive" Test "ArrayAssign Statement allowed " = NOT passed
[Expressions]
Tests passed = 21 out of 39
Points earned = 5.0 out of 10.0
Module: "Syntax_ContextFree_Exp_negative" Test "Type objects in Call argument list not allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Add allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Exp with multiple opperators allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Array Subscript allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Call with no arguments allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Call with Layout around the . allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "multiple Calls allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "numbers allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "multiple brackets allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "brackets allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "strange but possible combinations in syntax allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing Not allowed" = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing Mul allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing Add allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing Sub allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing Lt allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "ArrayIndex containing And allowed " = NOT passed
Module: "Syntax_ContextFree_Exp_positive" Test "Call with empty argument list allowed " = NOT passed
[Associativity]
Tests passed = 2 out of 8
Points earned = 2.5 out of 10.0
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for array Subscript " = NOT passed
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for Call " = NOT passed
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for Mul " = NOT passed
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for Add " = NOT passed
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for Sub " = NOT passed
Module: "Syntax_ContextFree_Exp_associativity" Test "left associativity for And " = NOT passed
[Priorities]
Tests passed = 0 out of 11
Points earned = 0 out of 20.0
Reason = No test passed